{"ast":null,"code":"var _jsxFileName = \"/home/andy/Documents/Breakdown New/client/src/component/Header/Nav.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavContainer from \"./NavContainer\";\nimport Logo from \"./Logo\";\nimport NavToggle from \"./NavToggle\";\nimport NavLinks from \"./NavLinks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nav = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(lastOpen => !lastOpen);\n\n  return /*#__PURE__*/_jsxDEV(NavContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavToggle, {\n      toggle: toggle,\n      isOpen: isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLinks, {\n      isOpen: isOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Nav, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = Nav;\nexport default Nav;\n\nvar _c;\n\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["useState","Link","NavContainer","Logo","NavToggle","NavLinks","Nav","isOpen","setIsOpen","toggle","lastOpen"],"sources":["/home/andy/Documents/Breakdown New/client/src/component/Header/Nav.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavContainer from \"./NavContainer\";\nimport Logo from \"./Logo\";\nimport NavToggle from \"./NavToggle\";\nimport NavLinks from \"./NavLinks\";\n\nconst Nav = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen((lastOpen) => !lastOpen);\n\n  return (\n    <NavContainer>\n      <Link to=\"/\">\n        <Logo />\n      </Link>\n      <NavToggle \n        toggle={toggle} \n        isOpen={isOpen} \n      />\n      <NavLinks isOpen={isOpen} />\n    </NavContainer>\n  );\n}\n\nexport default Nav;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;;EAEA,MAAMS,MAAM,GAAG,MAAMD,SAAS,CAAEE,QAAD,IAAc,CAACA,QAAhB,CAA9B;;EAEA,oBACE,QAAC,YAAD;IAAA,wBACE,QAAC,IAAD;MAAM,EAAE,EAAC,GAAT;MAAA,uBACE,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,SAAD;MACE,MAAM,EAAED,MADV;MAEE,MAAM,EAAEF;IAFV;MAAA;MAAA;MAAA;IAAA,QAJF,eAQE,QAAC,QAAD;MAAU,MAAM,EAAEA;IAAlB;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAjBD;;GAAMD,G;;KAAAA,G;AAmBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}